<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xml" href="unit.test.xsl"?>

<unit-test title="do:get_objects_by_path">

 <assert-equal name="do:get_objects_by_path">
  <path>//aaa/bbb</path>
  <what>content</what>
  <prefix>(</prefix>
  <suffix>)</suffix>
  <expect>(ABC)</expect>
 </assert-equal>

 <assert-equal name="do:get_objects_by_path">
  <path>//aaa/ccc</path>
  <what>content</what>
  <prefix>(</prefix>
  <suffix>)</suffix>
  <expect>(123)</expect>
 </assert-equal>

 <assert-equal name="do:get_objects_by_path">
  <path>//aaa</path>
  <what>content</what>
  <prefix>(</prefix>
  <suffix>)</suffix>
  <expect>(ABC 123)</expect>
 </assert-equal>


 <assert-equal name="do:get_objects_by_path">
  <path>//aaa/bbb</path>
  <what>text</what>
  <prefix>(</prefix>
  <suffix>)</suffix>
  <expect>(ABC)</expect>
 </assert-equal>

 <assert-equal name="do:get_objects_by_path">
  <path>//aaa/ccc</path>
  <what>text</what>
  <prefix>(</prefix>
  <suffix>)</suffix>
  <expect>(123)</expect>
 </assert-equal>

 <assert-equal name="do:get_objects_by_path">
  <path>//aaa</path>
  <what>text</what>
  <prefix>(</prefix>
  <suffix>)</suffix>
  <expect>()</expect>
 </assert-equal>


 <assert-equal name="do:get_objects_by_path">
  <path>//aaa/bbb</path>
  <what>number</what>
  <prefix>(</prefix>
  <suffix>)</suffix>
  <expect>(NaN)</expect>
 </assert-equal>

 <assert-equal name="do:get_objects_by_path">
  <path>//aaa/ccc</path>
  <what>number</what>
  <prefix>(</prefix>
  <suffix>)</suffix>
  <expect>(123)</expect>
 </assert-equal>

 <assert-equal name="do:get_objects_by_path">
  <path>//aaa</path>
  <what>number</what>
  <prefix>(</prefix>
  <suffix>)</suffix>
  <expect>(NaN)</expect>
 </assert-equal>


 <assert-equal name="do:get_objects_by_path">
  <path>//aaa/bbb</path>
  <what>name</what>
  <prefix>(</prefix>
  <suffix>)</suffix>
  <expect>(bbb)</expect>
 </assert-equal>

 <assert-equal name="do:get_objects_by_path">
  <path>//aaa/ccc</path>
  <what>name</what>
  <prefix>(</prefix>
  <suffix>)</suffix>
  <expect>(ccc)</expect>
 </assert-equal>

 <assert-equal name="do:get_objects_by_path">
  <path>//aaa</path>
  <what>name</what>
  <prefix>(</prefix>
  <suffix>)</suffix>
  <expect>(aaa)</expect>
 </assert-equal>


 <assert-not-empty name="do:get_objects_by_path">
  <path>//aaa/bbb</path>
  <what>id</what>
 </assert-not-empty>

 <assert-not-empty name="do:get_objects_by_path">
  <path>//aaa/ccc</path>
  <what>id</what>
 </assert-not-empty>

 <assert-not-empty name="do:get_objects_by_path">
  <path>//aaa</path>
  <what>id</what>
 </assert-not-empty>

 <assert-equal name="do:get_objects_by_path">
  <path>//aaa/bbb</path>
  <what>preceding-comment</what>
  <expect> comment before bbb. </expect>
 </assert-equal>

 <assert-equal name="do:get_objects_by_path">
  <path>//aaa/ccc</path>
  <what>preceding-comment</what>
  <expect> comment before ccc. </expect>
 </assert-equal>

 <assert-equal name="do:get_objects_by_path">
  <path>//aaa/bbb</path>
  <what>following-comment</what>
  <expect> comment after bbb. </expect>
 </assert-equal>

 <assert-equal name="do:get_objects_by_path">
  <path>//aaa/ccc</path>
  <what>following-comment</what>
  <expect> comment after ccc. </expect>
 </assert-equal>

 <aaa>
  <!-- comment before bbb. -->
  <bbb>ABC</bbb>
  <!-- comment after bbb. -->
  <!-- comment before ccc. --><ccc>123</ccc><!-- comment after ccc. -->
 </aaa>
</unit-test>
