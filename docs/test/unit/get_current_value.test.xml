<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="application/xml" href="unit-test.xsl"?>

<describe title="do:get_current_value">

 <it title="should get content of current node">
  <compute name="do:get_current_value">
   <param name="what">content</param>
   <param name="prefix">(</param><param name="suffix">)</param>123<aaa>ABC</aaa>456</compute>
  <expect>(content()123ABC456)</expect>
 </it>


 <it title="should get content of current node with normalizing spaces">
  <compute name="do:get_current_value">
   <param name="what">content</param>
   <param name="prefix">(</param>
   <param name="suffix">)</param>  123   <aaa> ABC </aaa>  456  </compute>
  <expect>(content() 123 ABC 456)</expect>
 </it>


 <it title="should get text of current node">
  <compute name="do:get_current_value">
   <param name="what">text</param>
   <param name="prefix">(</param>
   <param name="suffix">)</param>123<aaa>ABC</aaa>456</compute>
  <expect>(123)</expect>
 </it>


 <it title="should get text of current node with normalizing spaces">
  <compute name="do:get_current_value">
   <param name="what">text</param>
   <param name="prefix">(</param>
   <param name="suffix">)</param>  123 <aaa>   ABC </aaa>  456  </compute>
  <expect>(123)</expect>
 </it>


 <it title="should get number of current node">
  <compute name="do:get_current_value">
   <param name="what">number</param>
   <param name="prefix">(</param>
   <param name="suffix">)</param>123<aaa>ABC</aaa>456</compute>
  <expect>(123)</expect>
 </it>


 <it title="should get NaN of current node if param:what is `number` and node text is not a number">
  <compute name="do:get_current_value">
   <param name="what">number</param>
   <param name="prefix">(</param>
   <param name="suffix">)</param>abc</compute>
  <expect>(NaN)</expect>
 </it>


 <it title="should get name of current node">
  <compute name="do:get_current_value">
   <param name="what">name</param>
   <param name="prefix">(</param>
   <param name="suffix">)</param>123<aaa>ABC</aaa>456</compute>
  <expect>(compute)</expect>
 </it>


 <it skip="true" title="should get id of current node"/>


 <it title="should get preceding-comment of current node">
  <!--Comment A-->
  <compute name="do:get_current_value">
   <param name="what">preceding-comment</param>
   <param name="prefix">(</param>
   <param name="suffix">)</param>123<aaa>ABC</aaa>456</compute>
  <!--Comment B-->
  <expect>(Comment A)</expect>
 </it>


 <it title="should get following-comment of current node">
  <!--Comment A-->
  <compute name="do:get_current_value">
   <param name="what">following-comment</param>
   <param name="prefix">(</param>
   <param name="suffix">)</param>123<aaa>ABC</aaa>456</compute>
   <!--Comment B-->
   <expect>(Comment B)</expect>
 </it>


</describe>
