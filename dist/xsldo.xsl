<?xml version="1.0" encoding="UTF-8"?><!-- xsldo.xsl 1.0 Copyright (C) 2019-2022 xslet project MIT License --><xsl:stylesheet xmlns:do="https://github.com/xslet/2020/xsldo" xmlns:ut="https://github.com/xslet/2020/xslutil" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0"><xsl:import href="xslutil.xsl"/><xsl:param name="do:_path_sep">&#x86;/&#x87;</xsl:param><xsl:param name="do:_ns_sep">&#x86;:&#x87;</xsl:param><xsl:param name="do:_cond_sep">&#x86;?&#x87;</xsl:param><xsl:param name="do:_cond_or_sep">&#x96;|&#x97;</xsl:param><xsl:param name="do:_cond_and_sep">&#x96;,&#x97;</xsl:param><xsl:param name="do:_cond_path_sep">&#x96;/&#x97;</xsl:param><xsl:param name="do:_cond_op_sep">&#x96;=&#x97;</xsl:param><xsl:param name="do:_object_sep">&#x86;;&#x87;</xsl:param><xsl:template name="do:for_by_path"><xsl:param name="path"/><xsl:param name="data_url"/><xsl:param name="data_gid"/><xsl:param name="index_set"/><xsl:param name="index_id"/><xsl:param name="reverse"/><xsl:param name="sort_name"/><xsl:param name="sort_dir"/><xsl:param name="sort_type"/><xsl:param name="allow"/><xsl:param name="allow_text_node" select="$ut:true"/><xsl:param name="deny"/><xsl:param name="arg0"/><xsl:param name="arg1"/><xsl:param name="arg2"/><xsl:variable name="_expath"><xsl:call-template name="do:expand_path"><xsl:with-param name="path" select="$path"/><xsl:with-param name="what">id</xsl:with-param></xsl:call-template></xsl:variable><xsl:call-template name="do:for_by_expath"><xsl:with-param name="expath" select="$_expath"/><xsl:with-param name="data_url" select="$data_url"/><xsl:with-param name="data_gid" select="$data_gid"/><xsl:with-param name="index_set" select="$index_set"/><xsl:with-param name="index_id" select="$index_id"/><xsl:with-param name="reverse" select="$reverse"/><xsl:with-param name="sort_name" select="$sort_name"/><xsl:with-param name="sort_dir" select="$sort_dir"/><xsl:with-param name="sort_type" select="$sort_type"/><xsl:with-param name="allow" select="$allow"/><xsl:with-param name="allow_text_node" select="$allow_text_node"/><xsl:with-param name="deny" select="$deny"/><xsl:with-param name="arg0" select="$arg0"/><xsl:with-param name="arg1" select="$arg1"/><xsl:with-param name="arg2" select="$arg2"/></xsl:call-template></xsl:template><xsl:template name="do:for_by_expath"><xsl:param name="expath"/><xsl:param name="data_url"/><xsl:param name="data_gid"/><xsl:param name="index_set"/><xsl:param name="index_id"/><xsl:param name="reverse"/><xsl:param name="sort_name"/><xsl:param name="sort_dir"/><xsl:param name="sort_type"/><xsl:param name="allow"/><xsl:param name="allow_text_node" select="$ut:true"/><xsl:param name="deny"/><xsl:param name="arg0"/><xsl:param name="arg1"/><xsl:param name="arg2"/><xsl:variable name="_gids"><xsl:choose><xsl:when test="string-length($data_url) = 0"><xsl:choose><xsl:when test="string-length($data_gid) = 0"><xsl:call-template name="do:_collect_gids_without_data_gid"><xsl:with-param name="expath" select="$expath"/><xsl:with-param name="sort_name" select="$sort_name"/><xsl:with-param name="sort_dir" select="$sort_dir"/><xsl:with-param name="sort_type" select="$sort_type"/></xsl:call-template></xsl:when><xsl:otherwise><xsl:call-template name="do:_collect_gids_with_data_gid"><xsl:with-param name="data_gid" select="$data_gid"/><xsl:with-param name="expath" select="$expath"/><xsl:with-param name="sort_name" select="$sort_name"/><xsl:with-param name="sort_dir" select="$sort_dir"/><xsl:with-param name="sort_type" select="$sort_type"/></xsl:call-template></xsl:otherwise></xsl:choose></xsl:when><xsl:otherwise><xsl:for-each select="document($data_url, /)"><xsl:choose><xsl:when test="string-length($data_gid) = 0"><xsl:call-template name="do:_collect_gids_without_data_gid"><xsl:with-param name="expath" select="$expath"/><xsl:with-param name="sort_name" select="$sort_name"/><xsl:with-param name="sort_dir" select="$sort_dir"/><xsl:with-param name="sort_type" select="$sort_type"/></xsl:call-template></xsl:when><xsl:otherwise><xsl:call-template name="do:_collect_gids_with_data_gid"><xsl:with-param name="data_gid" select="$data_gid"/><xsl:with-param name="expath" select="$expath"/><xsl:with-param name="sort_name" select="$sort_name"/><xsl:with-param name="sort_dir" select="$sort_dir"/><xsl:with-param name="sort_type" select="$sort_type"/></xsl:call-template></xsl:otherwise></xsl:choose></xsl:for-each></xsl:otherwise></xsl:choose></xsl:variable><xsl:variable name="_num_of_gids"><xsl:if test="$reverse = $ut:true"><xsl:variable name="_len0" select="string-length($_gids)"/><xsl:variable name="_len1" select="string-length(translate($_gids, $do:_object_sep, ''))"/><xsl:variable name="_sep_len" select="string-length($do:_object_sep)"/><xsl:value-of select="($_len0 - $_len1) div $_sep_len"/></xsl:if></xsl:variable><xsl:call-template name="do:_for_by_gids_rcr"><xsl:with-param name="gids" select="$_gids"/><xsl:with-param name="reverse" select="$reverse"/><xsl:with-param name="index">1</xsl:with-param><xsl:with-param name="index_set" select="$index_set"/><xsl:with-param name="index_id" select="$index_id"/><xsl:with-param name="count" select="$_num_of_gids"/><xsl:with-param name="allow" select="$allow"/><xsl:with-param name="allow_text_node" select="$allow_text_node"/><xsl:with-param name="deny" select="$deny"/><xsl:with-param name="arg0" select="$arg0"/><xsl:with-param name="arg1" select="$arg1"/><xsl:with-param name="arg2" select="$arg2"/><xsl:with-param name="data_url" select="$data_url"/></xsl:call-template></xsl:template><xsl:template name="do:_collect_gids_without_data_gid"><xsl:param name="expath"/><xsl:param name="sort_name"/><xsl:param name="sort_type"/><xsl:param name="sort_dir"/><xsl:variable name="_gids0"><xsl:call-template name="do:get_objects_by_expath"><xsl:with-param name="expath" select="$expath"/><xsl:with-param name="what">id</xsl:with-param><xsl:with-param name="suffix" select="$do:_object_sep"/></xsl:call-template></xsl:variable><xsl:choose><xsl:when test="string-length($sort_name) &gt; 0 or string-length($sort_dir) &gt; 0 or string-length($sort_type) &gt; 0"><xsl:call-template name="do:_sort_gids"><xsl:with-param name="gids" select="$_gids0"/><xsl:with-param name="expath" select="$expath"/><xsl:with-param name="sort_name" select="$sort_name"/><xsl:with-param name="sort_dir" select="$sort_dir"/><xsl:with-param name="sort_type" select="$sort_type"/></xsl:call-template></xsl:when><xsl:otherwise><xsl:value-of select="$_gids0"/></xsl:otherwise></xsl:choose></xsl:template><xsl:template name="do:_collect_gids_with_data_gid"><xsl:param name="data_gid"/><xsl:param name="expath"/><xsl:param name="sort_name"/><xsl:param name="sort_type"/><xsl:param name="sort_dir"/><xsl:variable name="_gids0"><xsl:for-each select="//attribute::node()[generate-id() = $data_gid]"><xsl:call-template name="do:get_objects_by_expath"><xsl:with-param name="expath" select="$expath"/><xsl:with-param name="what">id</xsl:with-param><xsl:with-param name="suffix" select="$do:_object_sep"/></xsl:call-template></xsl:for-each><xsl:for-each select="//*[generate-id() = $data_gid]"><xsl:call-template name="do:get_objects_by_expath"><xsl:with-param name="expath" select="$expath"/><xsl:with-param name="what">id</xsl:with-param><xsl:with-param name="suffix" select="$do:_object_sep"/></xsl:call-template></xsl:for-each></xsl:variable><xsl:choose><xsl:when test="string-length($sort_name) &gt; 0 or string-length($sort_dir) &gt; 0 or string-length($sort_type) &gt; 0"><xsl:call-template name="do:_sort_gids"><xsl:with-param name="gids" select="$_gids0"/><xsl:with-param name="expath" select="$expath"/><xsl:with-param name="sort_name" select="$sort_name"/><xsl:with-param name="sort_dir" select="$sort_dir"/><xsl:with-param name="sort_type" select="$sort_type"/></xsl:call-template></xsl:when><xsl:otherwise><xsl:value-of select="$_gids0"/></xsl:otherwise></xsl:choose></xsl:template><xsl:template name="do:_for_by_gids_rcr"><xsl:param name="gids"/><xsl:param name="reverse"/><xsl:param name="index"/><xsl:param name="index_set"/><xsl:param name="index_id"/><xsl:param name="count"/><xsl:param name="allow"/><xsl:param name="allow_text_node"/><xsl:param name="deny"/><xsl:param name="arg0"/><xsl:param name="arg1"/><xsl:param name="arg2"/><xsl:param name="data_url"/><xsl:variable name="_index_set"><xsl:if test="string-length($index_id) &gt; 0"><xsl:value-of select="$do:_object_sep"/><xsl:value-of select="$index_id"/><xsl:value-of select="$do:_cond_op_sep"/><xsl:choose><xsl:when test="$reverse = $ut:true"><xsl:value-of select="$count + 1 - $index"/></xsl:when><xsl:otherwise><xsl:value-of select="$index"/></xsl:otherwise></xsl:choose></xsl:if><xsl:choose><xsl:when test="string-length($index_set) = 0"><xsl:value-of select="$do:_object_sep"/></xsl:when><xsl:otherwise><xsl:value-of select="$index_set"/></xsl:otherwise></xsl:choose></xsl:variable><xsl:variable name="_gid" select="substring-before($gids, $do:_object_sep)"/><xsl:variable name="_next" select="substring-after($gids, $do:_object_sep)"/><xsl:choose><xsl:when test="$reverse = $ut:true"><xsl:if test="string-length($_next) &gt; 0"><xsl:call-template name="do:_for_by_gids_rcr"><xsl:with-param name="gids" select="$_next"/><xsl:with-param name="reverse" select="$reverse"/><xsl:with-param name="index" select="$index + 1"/><xsl:with-param name="index_set" select="$index_set"/><xsl:with-param name="index_id" select="$index_id"/><xsl:with-param name="count" select="$count"/><xsl:with-param name="allow" select="$allow"/><xsl:with-param name="allow_text_node" select="$allow_text_node"/><xsl:with-param name="deny" select="$deny"/><xsl:with-param name="arg0" select="$arg0"/><xsl:with-param name="arg1" select="$arg1"/><xsl:with-param name="arg2" select="$arg2"/><xsl:with-param name="data_url" select="$data_url"/></xsl:call-template></xsl:if><xsl:if test="string-length($_gid) &gt; 0"><xsl:call-template name="do:_apply_each_node"><xsl:with-param name="data_url" select="$data_url"/><xsl:with-param name="data_gid" select="$_gid"/><xsl:with-param name="data_index" select="$count + 1 - $index"/><xsl:with-param name="data_indexes" select="$_index_set"/><xsl:with-param name="allow" select="$allow"/><xsl:with-param name="allow_text_node" select="$allow_text_node"/><xsl:with-param name="deny" select="$deny"/><xsl:with-param name="arg0" select="$arg0"/><xsl:with-param name="arg1" select="$arg1"/><xsl:with-param name="arg2" select="$arg2"/></xsl:call-template></xsl:if></xsl:when><xsl:otherwise><xsl:if test="string-length($_gid) &gt; 0"><xsl:call-template name="do:_apply_each_node"><xsl:with-param name="data_url" select="$data_url"/><xsl:with-param name="data_gid" select="$_gid"/><xsl:with-param name="data_index" select="$index"/><xsl:with-param name="data_indexes" select="$_index_set"/><xsl:with-param name="allow" select="$allow"/><xsl:with-param name="allow_text_node" select="$allow_text_node"/><xsl:with-param name="deny" select="$deny"/><xsl:with-param name="arg0" select="$arg0"/><xsl:with-param name="arg1" select="$arg1"/><xsl:with-param name="arg2" select="$arg2"/></xsl:call-template></xsl:if><xsl:if test="string-length($_next) &gt; 0"><xsl:call-template name="do:_for_by_gids_rcr"><xsl:with-param name="gids" select="$_next"/><xsl:with-param name="reverse" select="$reverse"/><xsl:with-param name="index" select="$index + 1"/><xsl:with-param name="index_set" select="$index_set"/><xsl:with-param name="index_id" select="$index_id"/><xsl:with-param name="allow" select="$allow"/><xsl:with-param name="allow_text_node" select="$allow_text_node"/><xsl:with-param name="deny" select="$deny"/><xsl:with-param name="arg0" select="$arg0"/><xsl:with-param name="arg1" select="$arg1"/><xsl:with-param name="arg2" select="$arg2"/><xsl:with-param name="data_url" select="$data_url"/></xsl:call-template></xsl:if></xsl:otherwise></xsl:choose></xsl:template><xsl:template name="do:_apply_each_node"><xsl:param name="data_url"/><xsl:param name="data_gid"/><xsl:param name="data_index"/><xsl:param name="data_indexes"/><xsl:param name="allow"/><xsl:param name="allow_text_node"/><xsl:param name="deny"/><xsl:param name="arg0"/><xsl:param name="arg1"/><xsl:param name="arg2"/><xsl:choose><xsl:when test="string-length($allow) = 0"><xsl:choose><xsl:when test="$allow_text_node = $ut:true"><xsl:apply-templates select="text()|*[not(contains($deny, concat('|', name(), '|')))]"><xsl:with-param name="data_url" select="$data_url"/><xsl:with-param name="data_gid" select="$data_gid"/><xsl:with-param name="data_index" select="$data_index"/><xsl:with-param name="data_indexes" select="$data_indexes"/><xsl:with-param name="allow" select="$allow"/><xsl:with-param name="allow_text_node" select="$allow_text_node"/><xsl:with-param name="deny" select="$deny"/><xsl:with-param name="arg0" select="$arg0"/><xsl:with-param name="arg1" select="$arg1"/><xsl:with-param name="arg2" select="$arg2"/></xsl:apply-templates></xsl:when><xsl:otherwise><xsl:apply-templates select="*[not(contains($deny, concat('|', name(), '|')))]"><xsl:with-param name="data_url" select="$data_url"/><xsl:with-param name="data_gid" select="$data_gid"/><xsl:with-param name="data_index" select="$data_index"/><xsl:with-param name="data_indexes" select="$data_indexes"/><xsl:with-param name="allow" select="$allow"/><xsl:with-param name="allow_text_node" select="$allow_text_node"/><xsl:with-param name="deny" select="$deny"/><xsl:with-param name="arg0" select="$arg0"/><xsl:with-param name="arg1" select="$arg1"/><xsl:with-param name="arg2" select="$arg2"/></xsl:apply-templates></xsl:otherwise></xsl:choose></xsl:when><xsl:otherwise><xsl:choose><xsl:when test="$allow_text_node = $ut:true"><xsl:apply-templates select="text()|*[contains($allow, concat('|', name(), '|')) and not(contains($deny, concat('|', name(), '|')))]"><xsl:with-param name="data_url" select="$data_url"/><xsl:with-param name="data_gid" select="$data_gid"/><xsl:with-param name="data_index" select="$data_index"/><xsl:with-param name="data_indexes" select="$data_indexes"/><xsl:with-param name="allow" select="$allow"/><xsl:with-param name="allow_text_node" select="$allow_text_node"/><xsl:with-param name="deny" select="$deny"/><xsl:with-param name="arg0" select="$arg0"/><xsl:with-param name="arg1" select="$arg1"/><xsl:with-param name="arg2" select="$arg2"/></xsl:apply-templates></xsl:when><xsl:otherwise><xsl:apply-templates select="*[contains($allow, concat('|', name(), '|')) and not(contains($deny, concat('|', name(), '|')))]"><xsl:with-param name="data_url" select="$data_url"/><xsl:with-param name="data_gid" select="$data_gid"/><xsl:with-param name="data_index" select="$data_index"/><xsl:with-param name="data_indexes" select="$data_indexes"/><xsl:with-param name="allow" select="$allow"/><xsl:with-param name="allow_text_node" select="$allow_text_node"/><xsl:with-param name="deny" select="$deny"/><xsl:with-param name="arg0" select="$arg0"/><xsl:with-param name="arg1" select="$arg1"/><xsl:with-param name="arg2" select="$arg2"/></xsl:apply-templates></xsl:otherwise></xsl:choose></xsl:otherwise></xsl:choose></xsl:template><xsl:template name="do:_sort_gids"><xsl:param name="gids"/><xsl:param name="expath"/><xsl:param name="sort_name"/><xsl:param name="sort_dir"/><xsl:param name="sort_type"/><xsl:variable name="_last"><xsl:call-template name="do:_get_last_node_name"><xsl:with-param name="expath" select="$expath"/></xsl:call-template></xsl:variable><xsl:variable name="_is_last_attr"><xsl:if test="starts-with($_last, '@')"><xsl:value-of select="$ut:true"/></xsl:if></xsl:variable><xsl:variable name="_last_name"><xsl:choose><xsl:when test="$_is_last_attr = $ut:true"><xsl:value-of select="substring($_last, 2)"/></xsl:when><xsl:otherwise><xsl:value-of select="$_last"/></xsl:otherwise></xsl:choose></xsl:variable><xsl:variable name="_ns"><xsl:value-of select="substring-before($_last_name, $do:_ns_sep)"/></xsl:variable><xsl:variable name="_lname"><xsl:value-of select="substring-before(substring-after($_last_name, $do:_ns_sep), $do:_cond_sep)"/></xsl:variable><xsl:variable name="_is_sort_by_attr"><xsl:if test="starts-with($sort_name, '@')"><xsl:value-of select="$ut:true"/></xsl:if></xsl:variable><xsl:variable name="_sort_name"><xsl:choose><xsl:when test="$_is_sort_by_attr = $ut:true"><xsl:value-of select="substring($sort_name, 2)"/></xsl:when><xsl:otherwise><xsl:value-of select="$sort_name"/></xsl:otherwise></xsl:choose></xsl:variable><xsl:variable name="_sort_ns"><xsl:variable name="_s" select="substring-before($_sort_name, ':')"/><xsl:choose><xsl:when test="string-length($_s) &gt; 0"><xsl:call-template name="ut:get_namespace_uri"><xsl:with-param name="prefix" select="$_s"/></xsl:call-template></xsl:when></xsl:choose></xsl:variable><xsl:variable name="_sort_elem_lname"><xsl:variable name="_s" select="substring-after($_sort_name, ':')"/><xsl:choose><xsl:when test="string-length($_s) &gt; 0"><xsl:value-of select="$_s"/></xsl:when><xsl:otherwise><xsl:value-of select="$_sort_name"/></xsl:otherwise></xsl:choose></xsl:variable><xsl:variable name="_sort_lname"><xsl:variable name="_s" select="substring-before($_sort_elem_lname, '/@')"/><xsl:choose><xsl:when test="string-length($_s) &gt; 0"><xsl:value-of select="$_s"/></xsl:when><xsl:otherwise><xsl:value-of select="$_sort_elem_lname"/></xsl:otherwise></xsl:choose></xsl:variable><xsl:variable name="_sort_attr_name"><xsl:variable name="_s" select="substring-after($_sort_elem_lname, '/@')"/><xsl:choose><xsl:when test="string-length($_s) &gt; 0"><xsl:value-of select="$_s"/></xsl:when></xsl:choose></xsl:variable><xsl:variable name="_sort_attr_ns"><xsl:variable name="_s" select="substring-before($_sort_attr_name, ':')"/><xsl:choose><xsl:when test="string-length($_s) &gt; 0"><xsl:call-template name="ut:get_namespace_uri"><xsl:with-param name="prefix" select="$_s"/></xsl:call-template></xsl:when></xsl:choose></xsl:variable><xsl:variable name="_sort_attr_lname"><xsl:variable name="_s" select="substring-after($_sort_attr_name, ':')"/><xsl:choose><xsl:when test="string-length($_s) &gt; 0"><xsl:value-of select="$_s"/></xsl:when><xsl:otherwise><xsl:value-of select="$_sort_attr_name"/></xsl:otherwise></xsl:choose></xsl:variable><xsl:variable name="_sort_dir"><xsl:choose><xsl:when test="$sort_dir = 'desc'">descending</xsl:when><xsl:otherwise>ascending</xsl:otherwise></xsl:choose></xsl:variable><xsl:variable name="_sort_type"><xsl:choose><xsl:when test="$sort_type = 'number'">number</xsl:when><xsl:otherwise>text</xsl:otherwise></xsl:choose></xsl:variable><xsl:variable name="_sorted_gids"><xsl:choose><xsl:when test="$_is_last_attr = $ut:true"><xsl:if test="string-length($sort_name) = 0 or $sort_name='.'"><xsl:call-template name="do:_sort_attributes"><xsl:with-param name="expath" select="$expath"/><xsl:with-param name="ns" select="$_ns"/><xsl:with-param name="lname" select="$_lname"/><xsl:with-param name="sort_dir" select="$_sort_dir"/><xsl:with-param name="sort_type" select="$_sort_type"/></xsl:call-template></xsl:if></xsl:when><xsl:when test="$_is_sort_by_attr = $ut:true"><xsl:call-template name="do:_sort_elements_by_attribute"><xsl:with-param name="expath" select="$expath"/><xsl:with-param name="ns" select="$_ns"/><xsl:with-param name="lname" select="$_lname"/><xsl:with-param name="sort_ns" select="$_sort_ns"/><xsl:with-param name="sort_lname" select="$_sort_lname"/><xsl:with-param name="sort_dir" select="$_sort_dir"/><xsl:with-param name="sort_type" select="$_sort_type"/></xsl:call-template></xsl:when><xsl:when test="string-length($sort_name) = 0 or $sort_name = '.'"><xsl:call-template name="do:_sort_elements_without_sort_name"><xsl:with-param name="expath" select="$expath"/><xsl:with-param name="ns" select="$_ns"/><xsl:with-param name="lname" select="$_lname"/><xsl:with-param name="sort_dir" select="$_sort_dir"/><xsl:with-param name="sort_type" select="$_sort_type"/></xsl:call-template></xsl:when><xsl:when test="string-length($_sort_attr_name) &gt; 0"><xsl:call-template name="do:_sort_elements_by_element_and_attribute"><xsl:with-param name="expath" select="$expath"/><xsl:with-param name="ns" select="$_ns"/><xsl:with-param name="lname" select="$_lname"/><xsl:with-param name="sort_ns" select="$_sort_ns"/><xsl:with-param name="sort_lname" select="$_sort_lname"/><xsl:with-param name="sort_attr_ns" select="$_sort_attr_ns"/><xsl:with-param name="sort_attr_lname" select="$_sort_attr_lname"/><xsl:with-param name="sort_dir" select="$_sort_dir"/><xsl:with-param name="sort_type" select="$_sort_type"/></xsl:call-template></xsl:when><xsl:otherwise><xsl:call-template name="do:_sort_elements_by_element"><xsl:with-param name="expath" select="$expath"/><xsl:with-param name="ns" select="$_ns"/><xsl:with-param name="lname" select="$_lname"/><xsl:with-param name="sort_ns" select="$_sort_ns"/><xsl:with-param name="sort_lname" select="$_sort_lname"/><xsl:with-param name="sort_dir" select="$_sort_dir"/><xsl:with-param name="sort_type" select="$_sort_type"/></xsl:call-template></xsl:otherwise></xsl:choose></xsl:variable><xsl:call-template name="do:_sort_selected_gids_rcr"><xsl:with-param name="selected_gids" select="concat($do:_object_sep, $gids)"/><xsl:with-param name="sorted_gids" select="$_sorted_gids"/></xsl:call-template></xsl:template><xsl:template name="do:_sort_attributes"><xsl:param name="expath"/><xsl:param name="ns"/><xsl:param name="lname"/><xsl:param name="sort_dir"/><xsl:param name="sort_type"/><xsl:choose><xsl:when test="starts-with($expath, $do:_path_sep)"><xsl:for-each select="//attribute::node()[namespace-uri() = $ns and local-name() = $lname]"><xsl:sort order="{$sort_dir}" data-type="{$sort_type}"/><xsl:value-of select="generate-id()"/><xsl:value-of select="$do:_object_sep"/></xsl:for-each></xsl:when><xsl:otherwise><xsl:for-each select=".//attribute::node()[namespace-uri() = $ns and local-name() = $lname]"><xsl:sort order="{$sort_dir}" data-type="{$sort_type}"/><xsl:value-of select="generate-id()"/><xsl:value-of select="$do:_object_sep"/></xsl:for-each></xsl:otherwise></xsl:choose></xsl:template><xsl:template name="do:_sort_elements_by_attribute"><xsl:param name="expath"/><xsl:param name="ns"/><xsl:param name="lname"/><xsl:param name="sort_ns"/><xsl:param name="sort_lname"/><xsl:param name="sort_dir"/><xsl:param name="sort_type"/><xsl:choose><xsl:when test="starts-with($expath, $do:_path_sep)"><xsl:for-each select="/descendant::*[namespace-uri() = $ns and local-name() = $lname]"><xsl:sort select="attribute::node()[namespace-uri() = $sort_ns and local-name() = $sort_lname]" order="{$sort_dir}" data-type="{$sort_type}"/><xsl:value-of select="generate-id()"/><xsl:value-of select="$do:_object_sep"/></xsl:for-each></xsl:when><xsl:otherwise><xsl:for-each select="descendant::*[namespace-uri() = $ns and local-name() = $lname]"><xsl:sort select="attribute::node()[namespace-uri() = $sort_ns and local-name() = $sort_lname]" order="{$sort_dir}" data-type="{$sort_type}"/><xsl:value-of select="generate-id()"/><xsl:value-of select="$do:_object_sep"/></xsl:for-each></xsl:otherwise></xsl:choose></xsl:template><xsl:template name="do:_sort_elements_by_element"><xsl:param name="expath"/><xsl:param name="ns"/><xsl:param name="lname"/><xsl:param name="sort_ns"/><xsl:param name="sort_lname"/><xsl:param name="sort_dir"/><xsl:param name="sort_type"/><xsl:choose><xsl:when test="starts-with($expath, $do:_path_sep)"><xsl:for-each select="/descendant::*[namespace-uri() = $ns and local-name() = $lname]"><xsl:sort select="*[namespace-uri() = $sort_ns and local-name() = $sort_lname]" order="{$sort_dir}" data-type="{$sort_type}"/><xsl:value-of select="generate-id()"/><xsl:value-of select="$do:_object_sep"/></xsl:for-each></xsl:when><xsl:otherwise><xsl:for-each select="descendant::*[namespace-uri() = $ns and local-name() = $lname]"><xsl:sort select="*[namespace-uri() = $sort_ns and local-name() = $sort_lname]" order="{$sort_dir}" data-type="{$sort_type}"/><xsl:value-of select="generate-id()"/><xsl:value-of select="$do:_object_sep"/></xsl:for-each></xsl:otherwise></xsl:choose></xsl:template><xsl:template name="do:_sort_elements_by_element_and_attribute"><xsl:param name="expath"/><xsl:param name="ns"/><xsl:param name="lname"/><xsl:param name="sort_ns"/><xsl:param name="sort_lname"/><xsl:param name="sort_attr_ns"/><xsl:param name="sort_attr_lname"/><xsl:param name="sort_dir"/><xsl:param name="sort_type"/><xsl:choose><xsl:when test="starts-with($expath, $do:_path_sep)"><xsl:for-each select="/descendant::*[namespace-uri() = $ns and local-name() = $lname]"><xsl:sort select="*[namespace-uri() = $sort_ns and local-name() = $sort_lname]/attribute::node()[namespace-uri() = $sort_attr_ns and local-name() = $sort_attr_lname]" order="{$sort_dir}" data-type="{$sort_type}"/><xsl:value-of select="generate-id()"/><xsl:value-of select="$do:_object_sep"/></xsl:for-each></xsl:when><xsl:otherwise><xsl:for-each select="descendant::*[namespace-uri() = $ns and local-name() = $lname]"><xsl:sort select="*[namespace-uri() = $sort_ns and local-name() = $sort_lname]/attribute::node()[namespace-uri() = $sort_attr_ns and local-name() = $sort_attr_lname]" order="{$sort_dir}" data-type="{$sort_type}"/><xsl:value-of select="generate-id()"/><xsl:value-of select="$do:_object_sep"/></xsl:for-each></xsl:otherwise></xsl:choose></xsl:template><xsl:template name="do:_sort_elements_without_sort_name"><xsl:param name="expath"/><xsl:param name="ns"/><xsl:param name="lname"/><xsl:param name="sort_dir"/><xsl:param name="sort_type"/><xsl:choose><xsl:when test="starts-with($expath, $do:_path_sep)"><xsl:for-each select="/descendant::*[namespace-uri() = $ns and local-name() = $lname]"><xsl:sort order="{$sort_dir}" data-type="{$sort_type}"/><xsl:value-of select="generate-id()"/><xsl:value-of select="$do:_object_sep"/></xsl:for-each></xsl:when><xsl:otherwise><xsl:for-each select="descendant::*[namespace-uri() = $ns and local-name() = $lname]"><xsl:sort order="{$sort_dir}" data-type="{$sort_type}"/><xsl:value-of select="generate-id()"/><xsl:value-of select="$do:_object_sep"/></xsl:for-each></xsl:otherwise></xsl:choose></xsl:template><xsl:template name="do:_get_last_node_name"><xsl:param name="expath"/><xsl:variable name="_next" select="substring-after($expath, $do:_path_sep)"/><xsl:choose><xsl:when test="string-length($_next) &gt; 0"><xsl:call-template name="do:_get_last_node_name"><xsl:with-param name="expath" select="$_next"/></xsl:call-template></xsl:when><xsl:otherwise><xsl:value-of select="$expath"/></xsl:otherwise></xsl:choose></xsl:template><xsl:template name="do:_sort_selected_gids_rcr"><xsl:param name="selected_gids"/><xsl:param name="sorted_gids"/><xsl:variable name="_gid" select="substring-before($sorted_gids, $do:_object_sep)"/><xsl:variable name="_next" select="substring-after($sorted_gids, $do:_object_sep)"/><xsl:if test="string-length($_gid) &gt; 0"><xsl:if test="contains($selected_gids, concat($do:_object_sep, $_gid, $do:_object_sep))"><xsl:value-of select="$_gid"/><xsl:value-of select="$do:_object_sep"/></xsl:if><xsl:call-template name="do:_sort_selected_gids_rcr"><xsl:with-param name="selected_gids" select="$selected_gids"/><xsl:with-param name="sorted_gids" select="$_next"/></xsl:call-template></xsl:if></xsl:template><xsl:template name="do:match_condition_by_path"><xsl:param name="condition"/><xsl:param name="data_url"/><xsl:param name="data_gid"/><xsl:variable name="_cond_by_expath"><xsl:call-template name="do:expand_path_in_condition"><xsl:with-param name="condition" select="$condition"/></xsl:call-template></xsl:variable><xsl:choose><xsl:when test="string-length($data_url) = 0"><xsl:choose><xsl:when test="string-length($data_gid) = 0"><xsl:call-template name="do:match_condition_by_expath"><xsl:with-param name="condition" select="$_cond_by_expath"/></xsl:call-template></xsl:when><xsl:otherwise><xsl:for-each select="//attribute::node()[generate-id() = $data_gid]"><xsl:call-template name="do:match_condition_by_expath"><xsl:with-param name="condition" select="$_cond_by_expath"/></xsl:call-template></xsl:for-each><xsl:for-each select="//*[generate-id() = $data_gid]"><xsl:call-template name="do:match_condition_by_expath"><xsl:with-param name="condition" select="$_cond_by_expath"/></xsl:call-template></xsl:for-each></xsl:otherwise></xsl:choose></xsl:when><xsl:otherwise><xsl:for-each select="document($data_url, /)"><xsl:choose><xsl:when test="string-length($data_gid) = 0"><xsl:call-template name="do:match_condition_by_expath"><xsl:with-param name="condition" select="$_cond_by_expath"/></xsl:call-template></xsl:when><xsl:otherwise><xsl:for-each select="//attribute::node()[generate-id() = $data_gid]"><xsl:call-template name="do:match_condition_by_expath"><xsl:with-param name="condition" select="$_cond_by_expath"/></xsl:call-template></xsl:for-each><xsl:for-each select="//*[generate-id() = $data_gid]"><xsl:call-template name="do:match_condition_by_expath"><xsl:with-param name="condition" select="$_cond_by_expath"/></xsl:call-template></xsl:for-each></xsl:otherwise></xsl:choose></xsl:for-each></xsl:otherwise></xsl:choose></xsl:template><xsl:template name="do:for_times"><xsl:param name="data_url"/><xsl:param name="data_gid"/><xsl:param name="times"/><xsl:param name="index_set"/><xsl:param name="index_id"/><xsl:param name="allow"/><xsl:param name="allow_text_node" select="$ut:true"/><xsl:param name="deny"/><xsl:param name="arg0"/><xsl:param name="arg1"/><xsl:param name="arg2"/><xsl:call-template name="do:_for_times_rcr"><xsl:with-param name="times" select="$times"/><xsl:with-param name="index">1</xsl:with-param><xsl:with-param name="index_set" select="$index_set"/><xsl:with-param name="index_id" select="$index_id"/><xsl:with-param name="allow" select="$allow"/><xsl:with-param name="allow_text_node" select="$allow_text_node"/><xsl:with-param name="deny" select="$deny"/><xsl:with-param name="arg0" select="$arg0"/><xsl:with-param name="arg1" select="$arg1"/><xsl:with-param name="arg2" select="$arg2"/><xsl:with-param name="data_url" select="$data_url"/><xsl:with-param name="data_gid" select="$data_gid"/></xsl:call-template></xsl:template><xsl:template name="do:_for_times_rcr"><xsl:param name="times"/><xsl:param name="index"/><xsl:param name="index_set"/><xsl:param name="index_id"/><xsl:param name="allow"/><xsl:param name="allow_text_node"/><xsl:param name="deny"/><xsl:param name="arg0"/><xsl:param name="arg1"/><xsl:param name="arg2"/><xsl:param name="data_url"/><xsl:param name="data_gid"/><xsl:variable name="_index_set"><xsl:if test="string-length($index_id) &gt; 0"><xsl:value-of select="$do:_object_sep"/><xsl:value-of select="$index_id"/><xsl:value-of select="$do:_cond_op_sep"/><xsl:value-of select="$index"/></xsl:if><xsl:choose><xsl:when test="string-length($index_set) = 0"><xsl:value-of select="$do:_object_sep"/></xsl:when><xsl:otherwise><xsl:value-of select="$index_set"/></xsl:otherwise></xsl:choose></xsl:variable><xsl:if test="$index &lt;= $times"><xsl:call-template name="do:_apply_each_node"><xsl:with-param name="data_url" select="$data_url"/><xsl:with-param name="data_gid" select="$data_gid"/><xsl:with-param name="data_index" select="$index"/><xsl:with-param name="data_indexes" select="$_index_set"/><xsl:with-param name="allow" select="$allow"/><xsl:with-param name="allow_text_node" select="$allow_text_node"/><xsl:with-param name="deny" select="$deny"/><xsl:with-param name="arg0" select="$arg0"/><xsl:with-param name="arg1" select="$arg1"/><xsl:with-param name="arg2" select="$arg2"/></xsl:call-template><xsl:call-template name="do:_for_times_rcr"><xsl:with-param name="times" select="$times"/><xsl:with-param name="index" select="$index + 1"/><xsl:with-param name="index_set" select="$index_set"/><xsl:with-param name="index_id" select="$index_id"/><xsl:with-param name="allow" select="$allow"/><xsl:with-param name="allow_text_node" select="$allow_text_node"/><xsl:with-param name="deny" select="$deny"/><xsl:with-param name="arg0" select="$arg0"/><xsl:with-param name="arg1" select="$arg1"/><xsl:with-param name="arg2" select="$arg2"/><xsl:with-param name="data_url" select="$data_url"/><xsl:with-param name="data_gid" select="$data_gid"/></xsl:call-template></xsl:if></xsl:template><xsl:template name="do:operate_expression"><xsl:param name="left"/><xsl:param name="op"/><xsl:param name="right"/><xsl:choose><xsl:when test="$op = 'eq'"><xsl:if test="$left = $right"><xsl:value-of select="$ut:true"/></xsl:if></xsl:when><xsl:when test="$op = 'ne'"><xsl:if test="$left != $right"><xsl:value-of select="$ut:true"/></xsl:if></xsl:when><xsl:when test="$op = 'lt'"><xsl:if test="$left &lt; $right"><xsl:value-of select="$ut:true"/></xsl:if></xsl:when><xsl:when test="$op = 'le'"><xsl:if test="$left &lt;= $right"><xsl:value-of select="$ut:true"/></xsl:if></xsl:when><xsl:when test="$op = 'gt'"><xsl:if test="$left &gt; $right"><xsl:value-of select="$ut:true"/></xsl:if></xsl:when><xsl:when test="$op = 'ge'"><xsl:if test="$left &gt;= $right"><xsl:value-of select="$ut:true"/></xsl:if></xsl:when></xsl:choose></xsl:template><xsl:template name="do:get_objects_by_path"><xsl:param name="path"/><xsl:param name="what"/><xsl:param name="prefix"/><xsl:param name="suffix"/><xsl:param name="data_url"/><xsl:param name="data_gid"/><xsl:variable name="_expath"><xsl:call-template name="do:expand_path"><xsl:with-param name="path" select="$path"/></xsl:call-template></xsl:variable><xsl:call-template name="do:get_objects_by_expath"><xsl:with-param name="expath" select="$_expath"/><xsl:with-param name="what" select="$what"/><xsl:with-param name="prefix" select="$prefix"/><xsl:with-param name="suffix" select="$suffix"/><xsl:with-param name="data_url" select="$data_url"/><xsl:with-param name="data_gid" select="$data_gid"/></xsl:call-template></xsl:template><xsl:template name="do:get_objects_by_expath"><xsl:param name="expath"/><xsl:param name="what"/><xsl:param name="prefix"/><xsl:param name="suffix"/><xsl:param name="data_url"/><xsl:param name="data_gid"/><xsl:choose><xsl:when test="string-length($data_url) = 0"><xsl:choose><xsl:when test="string-length($data_gid) = 0"><xsl:call-template name="do:_get_objects_by_expath_from_current_node"><xsl:with-param name="expath" select="$expath"/><xsl:with-param name="what" select="$what"/><xsl:with-param name="prefix" select="$prefix"/><xsl:with-param name="suffix" select="$suffix"/></xsl:call-template></xsl:when><xsl:otherwise><xsl:for-each select="//attribute::node()[generate-id() = $data_gid]"><xsl:call-template name="do:_get_objects_by_expath_from_current_node"><xsl:with-param name="expath" select="$expath"/><xsl:with-param name="what" select="$what"/><xsl:with-param name="prefix" select="$prefix"/><xsl:with-param name="suffix" select="$suffix"/></xsl:call-template></xsl:for-each><xsl:for-each select="//*[generate-id() = $data_gid]"><xsl:call-template name="do:_get_objects_by_expath_from_current_node"><xsl:with-param name="expath" select="$expath"/><xsl:with-param name="what" select="$what"/><xsl:with-param name="prefix" select="$prefix"/><xsl:with-param name="suffix" select="$suffix"/></xsl:call-template></xsl:for-each></xsl:otherwise></xsl:choose></xsl:when><xsl:otherwise><xsl:for-each select="document($data_url, /)"><xsl:choose><xsl:when test="string-length($data_gid) = 0"><xsl:call-template name="do:_get_objects_by_expath_from_current_node"><xsl:with-param name="expath" select="$expath"/><xsl:with-param name="what" select="$what"/><xsl:with-param name="prefix" select="$prefix"/><xsl:with-param name="suffix" select="$suffix"/></xsl:call-template></xsl:when><xsl:otherwise><xsl:for-each select="//attribute::node()[generate-id() = $data_gid]"><xsl:call-template name="do:_get_objects_by_expath_from_current_node"><xsl:with-param name="expath" select="$expath"/><xsl:with-param name="what" select="$what"/><xsl:with-param name="prefix" select="$prefix"/><xsl:with-param name="suffix" select="$suffix"/></xsl:call-template></xsl:for-each><xsl:for-each select="//*[generate-id() = $data_gid]"><xsl:call-template name="do:_get_objects_by_expath_from_current_node"><xsl:with-param name="expath" select="$expath"/><xsl:with-param name="what" select="$what"/><xsl:with-param name="prefix" select="$prefix"/><xsl:with-param name="suffix" select="$suffix"/></xsl:call-template></xsl:for-each></xsl:otherwise></xsl:choose></xsl:for-each></xsl:otherwise></xsl:choose></xsl:template><xsl:template name="do:_get_objects_by_expath_from_current_node"><xsl:param name="expath"/><xsl:param name="what"/><xsl:param name="prefix"/><xsl:param name="suffix"/><xsl:param name="data_url"/><xsl:param name="data_gid"/><xsl:param name="path_sep" select="$do:_path_sep"/><xsl:choose><xsl:when test="starts-with($expath, $path_sep)"><xsl:for-each select="/"><xsl:variable name="_next" select="substring-after($expath, $path_sep)"/><xsl:call-template name="do:_get_objects_by_expath_rcr"><xsl:with-param name="expath" select="$_next"/><xsl:with-param name="what" select="$what"/><xsl:with-param name="prefix" select="$prefix"/><xsl:with-param name="suffix" select="$suffix"/><xsl:with-param name="path_sep" select="$path_sep"/></xsl:call-template></xsl:for-each></xsl:when><xsl:otherwise><xsl:call-template name="do:_get_objects_by_expath_rcr"><xsl:with-param name="expath" select="$expath"/><xsl:with-param name="what" select="$what"/><xsl:with-param name="prefix" select="$prefix"/><xsl:with-param name="suffix" select="$suffix"/><xsl:with-param name="path_sep" select="$path_sep"/></xsl:call-template></xsl:otherwise></xsl:choose></xsl:template><xsl:template name="do:_get_objects_by_expath_rcr"><xsl:param name="expath"/><xsl:param name="what"/><xsl:param name="prefix"/><xsl:param name="suffix"/><xsl:param name="path_sep"/><xsl:choose><xsl:when test="$expath = ''"><xsl:call-template name="do:get_current_value"><xsl:with-param name="what" select="$what"/><xsl:with-param name="prefix" select="$prefix"/><xsl:with-param name="suffix" select="$suffix"/></xsl:call-template></xsl:when><xsl:otherwise><xsl:variable name="_nd0" select="substring-before($expath, $path_sep)"/><xsl:variable name="_next" select="substring-after($expath, $path_sep)"/><xsl:variable name="_at"><xsl:if test="starts-with($_nd0, '@')"><xsl:value-of select="$ut:true"/></xsl:if></xsl:variable><xsl:variable name="_nd1"><xsl:choose><xsl:when test="$_at = $ut:true"><xsl:value-of select="substring($_nd0, 2)"/></xsl:when><xsl:otherwise><xsl:value-of select="$_nd0"/></xsl:otherwise></xsl:choose></xsl:variable><xsl:variable name="_ns" select="substring-before($_nd1, $do:_ns_sep)"/><xsl:variable name="_nd2" select="substring-after($_nd1, $do:_ns_sep)"/><xsl:variable name="_lnm" select="substring-before($_nd2, $do:_cond_sep)"/><xsl:variable name="_cnd" select="substring-after($_nd2, $do:_cond_sep)"/><xsl:call-template name="do:_resolve_namespace_and_localname"><xsl:with-param name="is_attr" select="$_at"/><xsl:with-param name="namespace" select="$_ns"/><xsl:with-param name="localname" select="$_lnm"/><xsl:with-param name="condition" select="$_cnd"/><xsl:with-param name="next_expath" select="$_next"/><xsl:with-param name="what" select="$what"/><xsl:with-param name="prefix" select="$prefix"/><xsl:with-param name="suffix" select="$suffix"/><xsl:with-param name="path_sep" select="$path_sep"/></xsl:call-template></xsl:otherwise></xsl:choose></xsl:template><xsl:template name="do:_resolve_namespace_and_localname"><xsl:param name="is_attr"/><xsl:param name="namespace"/><xsl:param name="localname"/><xsl:param name="condition"/><xsl:param name="next_expath"/><xsl:param name="what"/><xsl:param name="prefix"/><xsl:param name="suffix"/><xsl:param name="path_sep"/><xsl:choose><xsl:when test="$is_attr = $ut:true"><xsl:if test="string-length($next_expath) = 0"><xsl:for-each select="attribute::node()[$namespace = namespace-uri() and $localname = local-name()]"><xsl:call-template name="do:_get_conditional_attribute"><xsl:with-param name="condition" select="$condition"/><xsl:with-param name="next_expath" select="$next_expath"/><xsl:with-param name="what" select="$what"/><xsl:with-param name="prefix" select="$prefix"/><xsl:with-param name="suffix" select="$suffix"/></xsl:call-template></xsl:for-each></xsl:if></xsl:when><xsl:when test="$localname = '*'"><xsl:choose><xsl:when test="string-length($namespace) = 0"><xsl:for-each select="*"><xsl:call-template name="do:_get_conditional_object"><xsl:with-param name="condition" select="$condition"/><xsl:with-param name="next_expath" select="$next_expath"/><xsl:with-param name="what" select="$what"/><xsl:with-param name="prefix" select="$prefix"/><xsl:with-param name="suffix" select="$suffix"/><xsl:with-param name="path_sep" select="$path_sep"/></xsl:call-template></xsl:for-each></xsl:when><xsl:otherwise><xsl:for-each select="*[namespace-uri() = $namespace]"><xsl:call-template name="do:_get_conditional_object"><xsl:with-param name="condition" select="$condition"/><xsl:with-param name="next_expath" select="$next_expath"/><xsl:with-param name="what" select="$what"/><xsl:with-param name="prefix" select="$prefix"/><xsl:with-param name="suffix" select="$suffix"/><xsl:with-param name="path_sep" select="$path_sep"/></xsl:call-template></xsl:for-each></xsl:otherwise></xsl:choose></xsl:when><xsl:when test="$localname = '**'"><xsl:choose><xsl:when test="string-length($namespace) = 0"><xsl:for-each select="descendant-or-self::node()"><xsl:call-template name="do:_get_conditional_object"><xsl:with-param name="condition" select="$condition"/><xsl:with-param name="next_expath" select="$next_expath"/><xsl:with-param name="what" select="$what"/><xsl:with-param name="prefix" select="$prefix"/><xsl:with-param name="suffix" select="$suffix"/><xsl:with-param name="path_sep" select="$path_sep"/></xsl:call-template></xsl:for-each></xsl:when><xsl:otherwise><xsl:for-each select="descendant-or-self::node()[namespace-uri() = $namespace]"><xsl:call-template name="do:_get_conditional_object"><xsl:with-param name="condition" select="$condition"/><xsl:with-param name="next_expath" select="$next_expath"/><xsl:with-param name="what" select="$what"/><xsl:with-param name="prefix" select="$prefix"/><xsl:with-param name="suffix" select="$suffix"/><xsl:with-param name="path_sep" select="$path_sep"/></xsl:call-template></xsl:for-each></xsl:otherwise></xsl:choose></xsl:when><xsl:when test="$localname = '.'"><xsl:call-template name="do:_get_conditional_object"><xsl:with-param name="condition" select="$condition"/><xsl:with-param name="next_expath" select="$next_expath"/><xsl:with-param name="what" select="$what"/><xsl:with-param name="prefix" select="$prefix"/><xsl:with-param name="suffix" select="$suffix"/><xsl:with-param name="path_sep" select="$path_sep"/></xsl:call-template></xsl:when><xsl:when test="$localname = '..'"><xsl:choose><xsl:when test="string-length($namespace) = 0"><xsl:for-each select="parent::*"><xsl:call-template name="do:_get_conditional_object"><xsl:with-param name="condition" select="$condition"/><xsl:with-param name="next_expath" select="$next_expath"/><xsl:with-param name="what" select="$what"/><xsl:with-param name="prefix" select="$prefix"/><xsl:with-param name="suffix" select="$suffix"/><xsl:with-param name="path_sep" select="$path_sep"/></xsl:call-template></xsl:for-each></xsl:when><xsl:otherwise><xsl:for-each select="parent::*[namespace-uri() = $namespace]"><xsl:call-template name="do:_get_conditional_object"><xsl:with-param name="condition" select="$condition"/><xsl:with-param name="next_expath" select="$next_expath"/><xsl:with-param name="what" select="$what"/><xsl:with-param name="prefix" select="$prefix"/><xsl:with-param name="suffix" select="$suffix"/><xsl:with-param name="path_sep" select="$path_sep"/></xsl:call-template></xsl:for-each></xsl:otherwise></xsl:choose></xsl:when><xsl:otherwise><xsl:for-each select="*[namespace-uri() = $namespace and local-name() = $localname]"><xsl:call-template name="do:_get_conditional_object"><xsl:with-param name="condition" select="$condition"/><xsl:with-param name="next_expath" select="$next_expath"/><xsl:with-param name="what" select="$what"/><xsl:with-param name="prefix" select="$prefix"/><xsl:with-param name="suffix" select="$suffix"/><xsl:with-param name="path_sep" select="$path_sep"/></xsl:call-template></xsl:for-each></xsl:otherwise></xsl:choose></xsl:template><xsl:template name="do:get_current_value"><xsl:param name="what"/><xsl:param name="prefix"/><xsl:param name="suffix"/><xsl:value-of select="$prefix"/><xsl:choose><xsl:when test="$what = 'content'"><xsl:value-of select="normalize-space(.)"/></xsl:when><xsl:when test="$what = 'text'"><xsl:value-of select="normalize-space(text())"/></xsl:when><xsl:when test="$what = 'number'"><xsl:value-of select="number(text())"/></xsl:when><xsl:when test="$what = 'name'"><xsl:value-of select="local-name()"/></xsl:when><xsl:when test="$what = 'id'"><xsl:value-of select="generate-id()"/></xsl:when><xsl:when test="$what = 'preceding-comment'"><xsl:call-template name="do:_get_preceding_comment"/></xsl:when><xsl:when test="$what = 'following-comment'"><xsl:call-template name="do:_get_following_comment"/></xsl:when></xsl:choose><xsl:value-of select="$suffix"/></xsl:template><xsl:template name="do:_get_preceding_comment"><xsl:variable name="_nid1" select="generate-id(preceding-sibling::node()[1])"/><xsl:variable name="_cid1" select="generate-id(preceding-sibling::comment()[1])"/><xsl:choose><xsl:when test="$_nid1 = $_cid1"><xsl:value-of select="preceding-sibling::comment()[1]"/></xsl:when><xsl:otherwise><xsl:variable name="_tid1" select="generate-id(preceding-sibling::text()[1])"/><xsl:if test="$_nid1 = $_tid1"><xsl:if test="string-length(normalize-space(preceding-sibling::text()[1])) = 0"><xsl:variable name="_nid2" select="generate-id(preceding-sibling::node()[2])"/><xsl:if test="$_nid2 = $_cid1"><xsl:value-of select="preceding-sibling::comment()[1]"/></xsl:if></xsl:if></xsl:if></xsl:otherwise></xsl:choose></xsl:template><xsl:template name="do:_get_following_comment"><xsl:variable name="_nid1" select="generate-id(following-sibling::node()[1])"/><xsl:variable name="_cid1" select="generate-id(following-sibling::comment()[1])"/><xsl:choose><xsl:when test="$_nid1 = $_cid1"><xsl:value-of select="following-sibling::comment()[1]"/></xsl:when><xsl:otherwise><xsl:variable name="_tid1" select="generate-id(following-sibling::text()[1])"/><xsl:if test="$_nid1 = $_tid1"><xsl:if test="string-length(normalize-space(following-sibling::text()[1])) = 0"><xsl:variable name="_nid2" select="generate-id(following-sibling::node()[2])"/><xsl:if test="$_nid2 = $_cid1"><xsl:value-of select="following-sibling::comment()[1]"/></xsl:if></xsl:if></xsl:if></xsl:otherwise></xsl:choose></xsl:template><xsl:template name="do:get_current_attribute"><xsl:param name="what"/><xsl:param name="prefix"/><xsl:param name="suffix"/><xsl:value-of select="$prefix"/><xsl:choose><xsl:when test="$what = 'content'"><xsl:value-of select="."/></xsl:when><xsl:when test="$what = 'text'"><xsl:value-of select="."/></xsl:when><xsl:when test="$what = 'number'"><xsl:value-of select="number()"/></xsl:when><xsl:when test="$what = 'name'"><xsl:value-of select="local-name()"/></xsl:when><xsl:when test="$what = 'id'"><xsl:value-of select="generate-id()"/></xsl:when></xsl:choose><xsl:value-of select="$suffix"/></xsl:template><xsl:template name="do:_get_conditional_attribute"><xsl:param name="condition"/><xsl:param name="next_expath"/><xsl:param name="what"/><xsl:param name="prefix"/><xsl:param name="suffix"/><xsl:variable name="_matched"><xsl:call-template name="do:match_condition_by_expath"><xsl:with-param name="condition" select="$condition"/></xsl:call-template></xsl:variable><xsl:if test="$_matched = $ut:true and string-length($next_expath) = 0"><xsl:call-template name="do:get_current_attribute"><xsl:with-param name="what" select="$what"/><xsl:with-param name="prefix" select="$prefix"/><xsl:with-param name="suffix" select="$suffix"/></xsl:call-template></xsl:if></xsl:template><xsl:template name="do:_get_conditional_object"><xsl:param name="condition"/><xsl:param name="next_expath"/><xsl:param name="what"/><xsl:param name="prefix"/><xsl:param name="suffix"/><xsl:param name="path_sep"/><xsl:variable name="_matched"><xsl:call-template name="do:match_condition_by_expath"><xsl:with-param name="condition" select="$condition"/></xsl:call-template></xsl:variable><xsl:if test="$_matched = $ut:true"><xsl:call-template name="do:_get_objects_by_expath_rcr"><xsl:with-param name="expath" select="$next_expath"/><xsl:with-param name="what" select="$what"/><xsl:with-param name="prefix" select="$prefix"/><xsl:with-param name="suffix" select="$suffix"/><xsl:with-param name="path_sep" select="$path_sep"/></xsl:call-template></xsl:if></xsl:template><xsl:template name="do:match_condition_by_expath"><xsl:param name="condition"/><xsl:variable name="_cond0"><xsl:call-template name="ut:trim"><xsl:with-param name="string" select="$condition"/></xsl:call-template></xsl:variable><xsl:choose><xsl:when test="string-length($_cond0) = 0"><xsl:value-of select="$ut:true"/></xsl:when><xsl:otherwise><xsl:variable name="_pos" select="number($_cond0)"/><xsl:choose><xsl:when test="boolean($_pos)"><xsl:if test="$_pos = position()"><xsl:value-of select="$ut:true"/></xsl:if></xsl:when><xsl:otherwise><xsl:call-template name="do:_match_conditions_or"><xsl:with-param name="conds" select="$_cond0"/></xsl:call-template></xsl:otherwise></xsl:choose></xsl:otherwise></xsl:choose></xsl:template><xsl:template name="do:_match_conditions_or"><xsl:param name="conds"/><xsl:choose><xsl:when test="string-length($conds) = 0"/><xsl:otherwise><xsl:variable name="_cond" select="substring-before($conds, $do:_cond_or_sep)"/><xsl:variable name="_matched"><xsl:call-template name="do:_match_conditions_and"><xsl:with-param name="conds" select="$_cond"/></xsl:call-template></xsl:variable><xsl:choose><xsl:when test="$_matched = $ut:true"><xsl:value-of select="$ut:true"/></xsl:when><xsl:otherwise><xsl:variable name="_next" select="substring-after($conds, $do:_cond_or_sep)"/><xsl:call-template name="do:_match_conditions_or"><xsl:with-param name="conds" select="$_next"/></xsl:call-template></xsl:otherwise></xsl:choose></xsl:otherwise></xsl:choose></xsl:template><xsl:template name="do:_match_conditions_and"><xsl:param name="conds"/><xsl:choose><xsl:when test="string-length($conds) = 0"/><xsl:otherwise><xsl:variable name="_cond" select="substring-before($conds, $do:_cond_and_sep)"/><xsl:variable name="_matched"><xsl:call-template name="do:_match_single_condition"><xsl:with-param name="cond" select="$_cond"/></xsl:call-template></xsl:variable><xsl:if test="$_matched = $ut:true"><xsl:variable name="_next" select="substring-after($conds, $do:_cond_and_sep)"/><xsl:choose><xsl:when test="string-length($_next) = 0"><xsl:value-of select="$ut:true"/></xsl:when><xsl:otherwise><xsl:call-template name="do:_match_conditions_and"><xsl:with-param name="conds" select="$_next"/></xsl:call-template></xsl:otherwise></xsl:choose></xsl:if></xsl:otherwise></xsl:choose></xsl:template><xsl:template name="do:_match_single_condition"><xsl:param name="cond"/><xsl:variable name="_after" select="substring-after($cond, $do:_cond_op_sep)"/><xsl:variable name="_op" select="substring-before($_after, $do:_cond_op_sep)"/><xsl:variable name="_right"><xsl:variable name="_r0" select="substring-after($_after, $do:_cond_op_sep)"/><xsl:call-template name="ut:trim_start"><xsl:with-param name="string" select="$_r0"/></xsl:call-template></xsl:variable><xsl:variable name="_quote"><xsl:if test="string(number($_right)) = 'NaN'"><xsl:value-of select="$ut:apos"/></xsl:if></xsl:variable><xsl:variable name="_left"><xsl:variable name="_e0" select="substring-before($cond, $do:_cond_op_sep)"/><xsl:variable name="_e1"><xsl:call-template name="ut:trim_end"><xsl:with-param name="string" select="$_e0"/></xsl:call-template></xsl:variable><xsl:variable name="_e2"><xsl:call-template name="do:_get_objects_by_expath_from_current_node"><xsl:with-param name="expath" select="$_e1"/><xsl:with-param name="what">content</xsl:with-param><xsl:with-param name="prefix" select="$_quote"/><xsl:with-param name="suffix" select="concat($_quote, $do:_object_sep)"/><xsl:with-param name="path_sep" select="$do:_cond_path_sep"/></xsl:call-template></xsl:variable><xsl:variable name="_e3" select="substring-before($_e2, $do:_object_sep)"/><xsl:call-template name="ut:trim"><xsl:with-param name="string" select="$_e3"/></xsl:call-template></xsl:variable><xsl:call-template name="do:operate_expression"><xsl:with-param name="left" select="$_left"/><xsl:with-param name="op" select="$_op"/><xsl:with-param name="right" select="$_right"/></xsl:call-template></xsl:template><xsl:template name="do:first_object_by_path"><xsl:param name="path"/><xsl:param name="what"/><xsl:param name="prefix"/><xsl:param name="suffix"/><xsl:param name="data_url"/><xsl:param name="data_gid"/><xsl:variable name="_expath"><xsl:call-template name="do:expand_path"><xsl:with-param name="path" select="$path"/></xsl:call-template></xsl:variable><xsl:call-template name="do:first_object_by_expath"><xsl:with-param name="expath" select="$_expath"/><xsl:with-param name="what" select="$what"/><xsl:with-param name="prefix" select="$prefix"/><xsl:with-param name="suffix" select="$suffix"/><xsl:with-param name="data_url" select="$data_url"/><xsl:with-param name="data_gid" select="$data_gid"/></xsl:call-template></xsl:template><xsl:template name="do:first_object_by_expath"><xsl:param name="expath"/><xsl:param name="what"/><xsl:param name="prefix"/><xsl:param name="suffix"/><xsl:param name="data_url"/><xsl:param name="data_gid"/><xsl:choose><xsl:when test="string-length($data_url) = 0"><xsl:choose><xsl:when test="string-length($data_gid) = 0"><xsl:call-template name="do:_first_object_by_expath_from_current_node"><xsl:with-param name="expath" select="$expath"/><xsl:with-param name="what" select="$what"/><xsl:with-param name="prefix" select="$prefix"/><xsl:with-param name="suffix" select="$suffix"/></xsl:call-template></xsl:when><xsl:otherwise><xsl:for-each select="//attribute::node()[generate-id() = $data_gid]|//*[generate-id() = $data_gid]"><xsl:call-template name="do:_first_object_by_expath_from_current_node"><xsl:with-param name="expath" select="$expath"/><xsl:with-param name="what" select="$what"/><xsl:with-param name="prefix" select="$prefix"/><xsl:with-param name="suffix" select="$suffix"/></xsl:call-template></xsl:for-each></xsl:otherwise></xsl:choose></xsl:when><xsl:otherwise><xsl:for-each select="document($data_url, /)"><xsl:choose><xsl:when test="string-length($data_gid) = 0"><xsl:call-template name="do:_first_object_by_expath_from_current_node"><xsl:with-param name="expath" select="$expath"/><xsl:with-param name="what" select="$what"/><xsl:with-param name="prefix" select="$prefix"/><xsl:with-param name="suffix" select="$suffix"/></xsl:call-template></xsl:when><xsl:otherwise><xsl:for-each select="//attribute::node()[generate-id() = $data_gid]|//*[generate-id() = $data_gid]"><xsl:call-template name="do:_first_object_by_expath_from_current_node"><xsl:with-param name="expath" select="$expath"/><xsl:with-param name="what" select="$what"/><xsl:with-param name="prefix" select="$prefix"/><xsl:with-param name="suffix" select="$suffix"/></xsl:call-template></xsl:for-each></xsl:otherwise></xsl:choose></xsl:for-each></xsl:otherwise></xsl:choose></xsl:template><xsl:template name="do:_first_object_by_expath_from_current_node"><xsl:param name="expath"/><xsl:param name="what"/><xsl:param name="prefix"/><xsl:param name="suffix"/><xsl:variable name="_gids"><xsl:call-template name="do:get_objects_by_expath"><xsl:with-param name="expath" select="$expath"/><xsl:with-param name="what">id</xsl:with-param><xsl:with-param name="suffix" select="$do:_object_sep"/></xsl:call-template></xsl:variable><xsl:variable name="_gid" select="normalize-space(substring-before($_gids, $do:_object_sep))"/><xsl:for-each select="//attribute::node()[generate-id() = $_gid]"><xsl:call-template name="do:get_current_attribute"><xsl:with-param name="what" select="$what"/><xsl:with-param name="prefix" select="$prefix"/><xsl:with-param name="suffix" select="$suffix"/></xsl:call-template></xsl:for-each><xsl:for-each select="//*[generate-id() = $_gid]"><xsl:call-template name="do:get_current_value"><xsl:with-param name="what" select="$what"/><xsl:with-param name="prefix" select="$prefix"/><xsl:with-param name="suffix" select="$suffix"/></xsl:call-template></xsl:for-each></xsl:template><xsl:template name="do:count_nodes_by_path"><xsl:param name="path"/><xsl:param name="prefix"/><xsl:param name="suffix"/><xsl:param name="data_url"/><xsl:param name="data_gid"/><xsl:variable name="_expath"><xsl:call-template name="do:expand_path"><xsl:with-param name="path" select="$path"/></xsl:call-template></xsl:variable><xsl:call-template name="do:count_nodes_by_expath"><xsl:with-param name="expath" select="$_expath"/><xsl:with-param name="prefix" select="$prefix"/><xsl:with-param name="suffix" select="$suffix"/><xsl:with-param name="data_url" select="$data_url"/><xsl:with-param name="data_gid" select="$data_gid"/></xsl:call-template></xsl:template><xsl:template name="do:count_nodes_by_expath"><xsl:param name="expath"/><xsl:param name="prefix"/><xsl:param name="suffix"/><xsl:param name="data_url"/><xsl:param name="data_gid"/><xsl:choose><xsl:when test="string-length($data_url) = 0"><xsl:choose><xsl:when test="string-length($data_gid) = 0"><xsl:call-template name="do:_count_nodes_by_expath_from_current_node"><xsl:with-param name="expath" select="$expath"/><xsl:with-param name="prefix" select="$prefix"/><xsl:with-param name="suffix" select="$suffix"/></xsl:call-template></xsl:when><xsl:otherwise><xsl:for-each select="//attribute::node()[generate-id() = $data_gid]|//*[generate-id() = $data_gid]"><xsl:call-template name="do:_count_nodes_by_expath_from_current_node"><xsl:with-param name="expath" select="$expath"/><xsl:with-param name="prefix" select="$prefix"/><xsl:with-param name="suffix" select="$suffix"/></xsl:call-template></xsl:for-each></xsl:otherwise></xsl:choose></xsl:when><xsl:otherwise><xsl:for-each select="document($data_url, /)"><xsl:choose><xsl:when test="string-length($data_gid) = 0"><xsl:call-template name="do:_count_nodes_by_expath_from_current_node"><xsl:with-param name="expath" select="$expath"/><xsl:with-param name="prefix" select="$prefix"/><xsl:with-param name="suffix" select="$suffix"/></xsl:call-template></xsl:when><xsl:otherwise><xsl:for-each select="//attribute::node()[generate-id() = $data_gid]|//*[generate-id() = $data_gid]"><xsl:call-template name="do:_count_nodes_by_expath_from_current_node"><xsl:with-param name="expath" select="$expath"/><xsl:with-param name="prefix" select="$prefix"/><xsl:with-param name="suffix" select="$suffix"/></xsl:call-template></xsl:for-each></xsl:otherwise></xsl:choose></xsl:for-each></xsl:otherwise></xsl:choose></xsl:template><xsl:template name="do:_count_nodes_by_expath_from_current_node"><xsl:param name="expath"/><xsl:param name="prefix"/><xsl:param name="suffix"/><xsl:variable name="_flags"><xsl:call-template name="do:get_objects_by_expath"><xsl:with-param name="expath" select="$expath"/><xsl:with-param name="suffix">I</xsl:with-param></xsl:call-template></xsl:variable><xsl:value-of select="$prefix"/><xsl:value-of select="string-length($_flags)"/><xsl:value-of select="$suffix"/></xsl:template><xsl:template name="do:expand_path"><xsl:param name="path"/><xsl:param name="path_sep" select="$do:_path_sep"/><xsl:choose><xsl:when test="substring($path, 1, 1) = '/'"><xsl:value-of select="$path_sep"/><xsl:call-template name="do:_expand_path_rcr"><xsl:with-param name="path" select="substring($path, 2)"/><xsl:with-param name="path_sep" select="$path_sep"/></xsl:call-template></xsl:when><xsl:otherwise><xsl:call-template name="do:_expand_path_rcr"><xsl:with-param name="path" select="$path"/><xsl:with-param name="path_sep" select="$path_sep"/></xsl:call-template></xsl:otherwise></xsl:choose></xsl:template><xsl:template name="do:_expand_path_rcr"><xsl:param name="path"/><xsl:param name="path_sep"/><xsl:choose><xsl:when test="string-length($path) = 0"/><xsl:when test="starts-with($path, '/')"><xsl:variable name="_next" select="substring($path, 2)"/><xsl:choose><xsl:when test="string-length($_next) = 0"/><xsl:otherwise><xsl:call-template name="do:_format_node"><xsl:with-param name="localname">**</xsl:with-param><xsl:with-param name="path_sep" select="$path_sep"/></xsl:call-template><xsl:call-template name="do:_expand_path_rcr"><xsl:with-param name="path" select="$_next"/><xsl:with-param name="path_sep" select="$path_sep"/></xsl:call-template></xsl:otherwise></xsl:choose></xsl:when><xsl:otherwise><xsl:variable name="_first"><xsl:call-template name="do:_get_first_node"><xsl:with-param name="path" select="$path"/><xsl:with-param name="path_sep" select="$path_sep"/></xsl:call-template></xsl:variable><xsl:call-template name="do:_expand_first_node"><xsl:with-param name="name" select="$_first"/><xsl:with-param name="path_sep" select="$path_sep"/></xsl:call-template><xsl:if test="string-length($_first) != 0"><xsl:variable name="_len" select="string-length($_first)"/><xsl:variable name="_next" select="substring($path, $_len + 2)"/><xsl:call-template name="do:_expand_path_rcr"><xsl:with-param name="path" select="$_next"/><xsl:with-param name="path_sep" select="$path_sep"/></xsl:call-template></xsl:if></xsl:otherwise></xsl:choose></xsl:template><xsl:template name="do:_format_node"><xsl:param name="attr_mark"/><xsl:param name="namespace"/><xsl:param name="localname"/><xsl:param name="condition"/><xsl:param name="path_sep"/><xsl:value-of select="$attr_mark"/><xsl:value-of select="$namespace"/><xsl:value-of select="$do:_ns_sep"/><xsl:value-of select="$localname"/><xsl:value-of select="$do:_cond_sep"/><xsl:value-of select="$condition"/><xsl:value-of select="$path_sep"/></xsl:template><xsl:template name="do:_get_first_node"><xsl:param name="path"/><xsl:param name="path_sep"/><xsl:variable name="_str0" select="substring-before($path, '/')"/><xsl:variable name="_len0" select="string-length($_str0)"/><xsl:choose><xsl:when test="$_len0 = 0"><xsl:value-of select="$path"/></xsl:when><xsl:otherwise><xsl:variable name="_str1" select="substring-after($_str0, '[')"/><xsl:variable name="_len1" select="string-length($_str1)"/><xsl:choose><xsl:when test="$_len1 = 0 and substring($_str0, $_len0) != '['"><xsl:value-of select="$_str0"/></xsl:when><xsl:when test="contains($_str1, ']')"><xsl:value-of select="$_str0"/></xsl:when><xsl:otherwise><xsl:variable name="_str2" select="substring($path, $_len0 + 1)"/><xsl:variable name="_str3" select="substring-before($_str2, ']')"/><xsl:variable name="_len3" select="string-length($_str3)"/><xsl:choose><xsl:when test="$_len3 = 0"><xsl:value-of select="$path"/></xsl:when><xsl:otherwise><xsl:variable name="_str4" select="substring($_str2, $_len3 + 1)"/><xsl:variable name="_str5" select="substring-before($_str4, '/')"/><xsl:variable name="_len5" select="string-length($_str5)"/><xsl:choose><xsl:when test="$_len5 = 0"><xsl:value-of select="$path"/></xsl:when><xsl:otherwise><xsl:variable name="_len" select="$_len0 + $_len3 + $_len5"/><xsl:value-of select="substring($path, 1, $_len)"/></xsl:otherwise></xsl:choose></xsl:otherwise></xsl:choose></xsl:otherwise></xsl:choose></xsl:otherwise></xsl:choose></xsl:template><xsl:template name="do:_expand_first_node"><xsl:param name="name"/><xsl:param name="path_sep"/><xsl:variable name="_at"><xsl:if test="starts-with($name, '@')">@</xsl:if></xsl:variable><xsl:variable name="_str0"><xsl:choose><xsl:when test="string-length($_at) = 0"><xsl:value-of select="$name"/></xsl:when><xsl:otherwise><xsl:value-of select="substring($name, 2)"/></xsl:otherwise></xsl:choose></xsl:variable><xsl:variable name="_str1" select="substring-before($_str0, '[')"/><xsl:variable name="_len1" select="string-length($_str1)"/><xsl:variable name="_str2"><xsl:choose><xsl:when test="$_len1 = 0"><xsl:value-of select="$_str0"/></xsl:when><xsl:otherwise><xsl:value-of select="$_str1"/></xsl:otherwise></xsl:choose></xsl:variable><xsl:variable name="_prefix" select="substring-before($_str2, ':')"/><xsl:variable name="_ns"><xsl:call-template name="ut:get_namespace_uri"><xsl:with-param name="prefix" select="$_prefix"/></xsl:call-template></xsl:variable><xsl:variable name="_lname"><xsl:choose><xsl:when test="string-length($_prefix) = 0"><xsl:value-of select="$_str2"/></xsl:when><xsl:otherwise><xsl:value-of select="substring($_str2, string-length($_prefix) + 2)"/></xsl:otherwise></xsl:choose></xsl:variable><xsl:variable name="_cond"><xsl:variable name="_str3" select="substring($_str0, $_len1 + 2)"/><xsl:variable name="_len3" select="string-length($_str3)"/><xsl:choose><xsl:when test="substring($_str3, $_len3) = ']'"><xsl:value-of select="substring($_str3, 1, $_len3 - 1)"/></xsl:when><xsl:otherwise><xsl:value-of select="substring-before($_str3, ']')"/></xsl:otherwise></xsl:choose></xsl:variable><xsl:variable name="_expanded_cond"><xsl:call-template name="do:expand_path_in_condition"><xsl:with-param name="condition" select="$_cond"/></xsl:call-template></xsl:variable><xsl:call-template name="do:_format_node"><xsl:with-param name="attr_mark" select="$_at"/><xsl:with-param name="namespace" select="$_ns"/><xsl:with-param name="localname" select="$_lname"/><xsl:with-param name="condition" select="$_expanded_cond"/><xsl:with-param name="path_sep" select="$path_sep"/></xsl:call-template></xsl:template><xsl:template name="do:expand_path_in_condition"><xsl:param name="condition"/><xsl:variable name="_cond0"><xsl:call-template name="ut:trim"><xsl:with-param name="string" select="$condition"/></xsl:call-template></xsl:variable><xsl:choose><xsl:when test="string-length($_cond0) = 0"/><xsl:otherwise><xsl:variable name="_pos" select="number($_cond0)"/><xsl:choose><xsl:when test="boolean($_pos)"><xsl:value-of select="$_pos"/></xsl:when><xsl:otherwise><xsl:call-template name="do:_expand_path_in_or_condition"><xsl:with-param name="conds" select="$_cond0"/></xsl:call-template></xsl:otherwise></xsl:choose></xsl:otherwise></xsl:choose></xsl:template><xsl:template name="do:_expand_path_in_or_condition"><xsl:param name="conds"/><xsl:choose><xsl:when test="string-length($conds) = 0 or $conds = '|'"/><xsl:otherwise><xsl:variable name="_cond0"><xsl:call-template name="ut:trim_end"><xsl:with-param name="string" select="substring-before($conds, '|')"/></xsl:call-template></xsl:variable><xsl:variable name="_next0"><xsl:call-template name="ut:trim_start"><xsl:with-param name="string" select="substring-after($conds, '|')"/></xsl:call-template></xsl:variable><xsl:choose><xsl:when test="string-length($_cond0) = 0 and string-length($_next0) = 0"><xsl:variable name="_cond1"><xsl:call-template name="do:_expand_path_in_and_condition"><xsl:with-param name="conds" select="$conds"/></xsl:call-template></xsl:variable><xsl:if test="string-length($_cond1) != 0"><xsl:value-of select="$_cond1"/><xsl:value-of select="$do:_cond_or_sep"/></xsl:if></xsl:when><xsl:otherwise><xsl:variable name="_cond1"><xsl:call-template name="do:_expand_path_in_and_condition"><xsl:with-param name="conds" select="$_cond0"/></xsl:call-template></xsl:variable><xsl:if test="string-length($_cond1) != 0"><xsl:value-of select="$_cond1"/><xsl:value-of select="$do:_cond_or_sep"/></xsl:if><xsl:call-template name="do:_expand_path_in_or_condition"><xsl:with-param name="conds" select="$_next0"/></xsl:call-template></xsl:otherwise></xsl:choose></xsl:otherwise></xsl:choose></xsl:template><xsl:template name="do:_expand_path_in_and_condition"><xsl:param name="conds"/><xsl:choose><xsl:when test="string-length($conds) = 0 or $conds = ','"/><xsl:otherwise><xsl:variable name="_cond0"><xsl:call-template name="ut:trim_end"><xsl:with-param name="string" select="substring-before($conds, ',')"/></xsl:call-template></xsl:variable><xsl:variable name="_next0"><xsl:call-template name="ut:trim_start"><xsl:with-param name="string" select="substring-after($conds, ',')"/></xsl:call-template></xsl:variable><xsl:choose><xsl:when test="string-length($_cond0) =0 and string-length($_next0) =0"><xsl:variable name="_cond1"><xsl:call-template name="do:_expand_path_in_single_condition"><xsl:with-param name="expr" select="$conds"/></xsl:call-template></xsl:variable><xsl:if test="string-length($_cond1) != 0"><xsl:value-of select="$_cond1"/><xsl:value-of select="$do:_cond_and_sep"/></xsl:if></xsl:when><xsl:otherwise><xsl:variable name="_cond1"><xsl:call-template name="do:_expand_path_in_single_condition"><xsl:with-param name="expr" select="$_cond0"/></xsl:call-template></xsl:variable><xsl:if test="string-length($_cond1) != 0"><xsl:value-of select="$_cond1"/><xsl:value-of select="$do:_cond_and_sep"/></xsl:if><xsl:call-template name="do:_expand_path_in_and_condition"><xsl:with-param name="conds" select="$_next0"/></xsl:call-template></xsl:otherwise></xsl:choose></xsl:otherwise></xsl:choose></xsl:template><xsl:template name="do:_expand_path_in_single_condition"><xsl:param name="expr"/><xsl:call-template name="do:_expand_path_in_single_condition_by_op"><xsl:with-param name="expr" select="$expr"/><xsl:with-param name="op_mark"><xsl:choose><xsl:when test="contains($expr, '!=')">!=</xsl:when><xsl:when test="contains($expr, '=')">=</xsl:when><xsl:when test="contains($expr, ' eq ')"> eq </xsl:when><xsl:when test="contains($expr, ' ne ')"> ne </xsl:when><xsl:when test="contains($expr, ' gt ')"> gt </xsl:when><xsl:when test="contains($expr, ' ge ')"> ge </xsl:when><xsl:when test="contains($expr, ' lt ')"> lt </xsl:when><xsl:when test="contains($expr, ' le ')"> le </xsl:when></xsl:choose></xsl:with-param><xsl:with-param name="op"><xsl:choose><xsl:when test="contains($expr, '!=')">ne</xsl:when><xsl:when test="contains($expr, '=')">eq</xsl:when><xsl:when test="contains($expr, ' eq ')">eq</xsl:when><xsl:when test="contains($expr, ' ne ')">ne</xsl:when><xsl:when test="contains($expr, ' gt ')">gt</xsl:when><xsl:when test="contains($expr, ' ge ')">ge</xsl:when><xsl:when test="contains($expr, ' lt ')">lt</xsl:when><xsl:when test="contains($expr, ' le ')">le</xsl:when></xsl:choose></xsl:with-param></xsl:call-template></xsl:template><xsl:template name="do:_expand_path_in_single_condition_by_op"><xsl:param name="expr"/><xsl:param name="op_mark"/><xsl:param name="op"/><xsl:variable name="_path"><xsl:call-template name="ut:trim_end"><xsl:with-param name="string" select="substring-before($expr, $op_mark)"/></xsl:call-template></xsl:variable><xsl:call-template name="do:expand_path"><xsl:with-param name="path" select="$_path"/><xsl:with-param name="path_sep" select="$do:_cond_path_sep"/></xsl:call-template><xsl:value-of select="$do:_cond_op_sep"/><xsl:value-of select="$op"/><xsl:value-of select="$do:_cond_op_sep"/><xsl:call-template name="ut:trim_start"><xsl:with-param name="string" select="substring-after($expr, $op_mark)"/></xsl:call-template></xsl:template></xsl:stylesheet>